@use 'sass:map';
@use '@angular/material' as mat;
@use 'theme' as theme;

@import 'gridstack/dist/src/gridstack.scss';
@import 'gridstack/dist/src/gridstack-extra.scss';

@import '@fontsource/roboto/index.css';
@import '@fontsource-variable/roboto-flex/full.css';

$material-symbols-font-path: 'material-symbols/';
@import 'material-symbols';

@include mat.core();

// Custom Styles

html,
body {
  margin: 0;
  height: 100%;
  font-family: 'Roboto Flex Variable';
  background-color: var(--clip-background-color);

  // Applying Material Themes
  @include mat.core-theme(theme.$dark-theme);
  @include mat.all-component-themes(theme.$dark-theme);
  @include mat.all-component-densities(theme.$dark-theme);
  @include mat.color-variants-backwards-compatibility(theme.$dark-theme);
  @include mat.typography-hierarchy(theme.$dark-theme);

  // Light Theme
  [data-theme='clip-light'] {
    @include mat.all-component-colors(theme.$light-theme);
  }
}

// Material Card Title Adjustment
// ISSUE: mat-card-title is always black???
.mat-mdc-card-title {
  color: var(--clip-main-ui-text-color);
}

.branded-font {
  font-variation-settings: (
    'wdth' 100,
    'opsz' 50,
    'GRAD' 0,
    'slnt' 0,
    'XTRA' 500,
    'YTLC' 500,
    'YOPQ' 80,
    'YTAS' 750,
    'YTDE' -230,
    'YTLC' 500,
    'XOPQ' 92
  ) !important;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
  color: var(--clip-main-ui-text-color);
}

h1 {
  font-weight: 600 !important;
}

h2,
h3 {
  font-weight: 500 !important;
}

button,
input {
  font-family: inherit !important;
  font-variation-settings: inherit !important;
}

a {
  color: inherit;
  text-decoration: none;

  &:hover {
    text-decoration: underline;
  }
}

ul,
ol {
  margin: 0 0 1rem 1.5rem;
  padding: 0;
}

code {
  font-family: Monaco, Menlo, Consolas, 'Courier New', monospace;
}

.density-minus-1 {
  @include mat.button-density(-1);
}

.density-minus-2 {
  @include mat.button-density(-2);
}

.density-minus-3 {
  @include mat.button-density(-3);
}

table {
  th,
  td {
    border-bottom-color: var(--clip-background-shader) !important;
  }
}

.grid-stack-edit-mode {
  .grid-stack-item.grid-stack-sub-grid {
    .grid-stack-item-content {
      background: var(--clip-background-shader);
    }
  }
}

.grid-stack {
  .grid-stack-nested {
    background: none;
    position: absolute;
    inset: 0;
  }
}

.highlighted {
  &::after {
    background: #ececec;
    border-radius: 100px;
    height: 20px;
    width: 20px;
    content: '';
    position: absolute;
    bottom: 50%;
    left: 50%;
    transform: translate(-50%, 50%);
    $box-shadow:
      0px 1px 1px 0px rgba(0, 0, 0, 0.726),
      1px 1px 4px 0px rgba(0, 0, 0, 0.15);
  }
}
